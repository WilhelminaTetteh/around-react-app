{"ast":null,"code":"var _jsxFileName = \"/Users/wilhelminatetteh/Desktop/around-react-app/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  // subscribing Card to CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext); // Checking if you are the owner of the current card\n\n  const isOwn = props.card.owner._id === currentUser._id; // Creating a variable which you'll then set in `className` for the delete button\n\n  const cardDeleteButtonClassName = `grid__delete-icon ${isOwn ? \"grid__delete-show\" : \"grid__delete-hide\"}`; // Check if the card was liked by the current user\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id); // Create a variable which you then set in `className` for the like button\n\n  const cardLikeButtonClassName = `grid__icon ${isLiked ? \"grid__icon_active\" : \"\"}`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid__template\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"aria-label\": \"modal button\",\n        className: cardDeleteButtonClassName,\n        onClick: handleDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid__image\",\n        style: {\n          backgroundImage: `url(${props.card.link})`\n        },\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid__caption\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid__text\",\n          children: props.card.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__like-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: cardLikeButtonClassName,\n            onClick: handleLikeClick,\n            \"aria-label\": \"grid icon\",\n            type: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"grid__likes\",\n            children: props.card.likes.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"fR8wccA8kuOmI8tLX/QG90sBSlk=\");\n\n_c = Card;\nexport default Card; // pass it on to the Card component through the Main component — in the form of onCardClick props\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/wilhelminatetteh/Desktop/around-react-app/src/components/Card.js"],"names":["React","CurrentUserContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","handleClick","onCardClick","handleLikeClick","onCardLike","handleDeleteClick","onCardDelete","backgroundImage","link","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBJ,kBAAjB,CAApB,CAFmB,CAGnB;;AACA,QAAMK,KAAK,GAAGH,KAAK,CAACI,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,KAAyBL,WAAW,CAACK,GAAnD,CAJmB,CAKnB;;AACA,QAAMC,yBAAyB,GAAI,qBACjCJ,KAAK,GAAG,mBAAH,GAAyB,mBAC/B,EAFD,CANmB,CASnB;;AACA,QAAMK,OAAO,GAAGR,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBC,IAAjB,CAAuBC,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,WAAW,CAACK,GAAnD,CAAhB,CAVmB,CAWnB;;AACA,QAAMM,uBAAuB,GAAI,cAC/BJ,OAAO,GAAG,mBAAH,GAAyB,EACjC,EAFD;;AAIA,WAASK,WAAT,GAAuB;AACrBb,IAAAA,KAAK,CAACc,WAAN,CAAkBd,KAAK,CAACI,IAAxB;AACD;;AACD,WAASW,eAAT,GAA2B;AACzBf,IAAAA,KAAK,CAACgB,UAAN,CAAiBhB,KAAK,CAACI,IAAvB;AACD;;AACD,WAASa,iBAAT,GAA6B;AAC3BjB,IAAAA,KAAK,CAACkB,YAAN,CAAmBlB,KAAK,CAACI,IAAzB;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,sBAAW,cAFb;AAGE,QAAA,SAAS,EAAEG,yBAHb;AAIE,QAAA,OAAO,EAAEU;AAJX;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAE;AAAEE,UAAAA,eAAe,EAAG,OAAMnB,KAAK,CAACI,IAAN,CAAWgB,IAAK;AAA1C,SAFT;AAGE,QAAA,OAAO,EAAEP;AAHX;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2Bb,KAAK,CAACI,IAAN,CAAWiB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAET,uBADb;AAEE,YAAA,OAAO,EAAEG,eAFX;AAGE,0BAAW,WAHb;AAIE,YAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,sBAA4Bf,KAAK,CAACI,IAAN,CAAWK,KAAX,CAAiBa;AAA7C;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAtDQvB,I;;KAAAA,I;AAwDT,eAAeA,IAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nfunction Card(props) {\n  // subscribing Card to CurrentUserContext\n  const currentUser = React.useContext(CurrentUserContext);\n  // Checking if you are the owner of the current card\n  const isOwn = props.card.owner._id === currentUser._id;\n  // Creating a variable which you'll then set in `className` for the delete button\n  const cardDeleteButtonClassName = `grid__delete-icon ${\n    isOwn ? \"grid__delete-show\" : \"grid__delete-hide\"\n  }`;\n  // Check if the card was liked by the current user\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n  // Create a variable which you then set in `className` for the like button\n  const cardLikeButtonClassName = `grid__icon ${\n    isLiked ? \"grid__icon_active\" : \"\"\n  }`;\n\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\n  function handleLikeClick() {\n    props.onCardLike(props.card);\n  }\n  function handleDeleteClick() {\n    props.onCardDelete(props.card);\n  }\n  return (\n    <div className=\"grid__template\">\n      <li className=\"grid__item\">\n        <button\n          type=\"button\"\n          aria-label=\"modal button\"\n          className={cardDeleteButtonClassName}\n          onClick={handleDeleteClick}\n        ></button>\n        <div\n          className=\"grid__image\"\n          style={{ backgroundImage: `url(${props.card.link})` }}\n          onClick={handleClick}\n        ></div>\n        <div className=\"grid__caption\">\n          <p className=\"grid__text\">{props.card.name}</p>\n          <div className=\"grid__like-column\">\n            <button\n              className={cardLikeButtonClassName}\n              onClick={handleLikeClick}\n              aria-label=\"grid icon\"\n              type=\"button\"\n            ></button>\n            <p className=\"grid__likes\">{props.card.likes.length}</p>\n          </div>\n        </div>\n      </li>\n    </div>\n  );\n}\n\nexport default Card;\n\n// pass it on to the Card component through the Main component — in the form of onCardClick props\n"]},"metadata":{},"sourceType":"module"}