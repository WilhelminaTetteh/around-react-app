{"ast":null,"code":"var _jsxFileName = \"/Users/wilhelminatetteh/Desktop/around-react-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport InfoToolTip from \"./InfoTooltip\";\nimport * as auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // State variable and setters\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false); // NOTE : info tooltip original state\n\n  const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]); //loggedin state\n\n  const [loggedIn, setLoggedIn] = React.useState(false); // use userData to show user email on the nav\n  // const [userData, setUserData] = useState({});\n\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n  const [isSuccessful, setIsSuccessful] = React.useState(false); //HANDLE AUTHENTICATIONe\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    api.getInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  useEffect(() => {\n    api.getCardList().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); //handlers for opening modals\n\n  function handleEditAvatarClick() {\n    // console.log(\"The Avatar was clicked.\");\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    // console.log(\"The Profile was clicked.\");\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    // console.log(\"The Place button  was clicked.\");\n    setIsAddPlacePopupOpen(true);\n  } //Image Popup\n\n\n  function handleCardClick({\n    name,\n    link\n  }) {\n    setSelectedCard({\n      name,\n      link\n    });\n    setIsImagePopupOpen(true);\n  } // NOTE :Handle info tooltip\n\n\n  function handleInfoTooltip() {\n    setIsInfoToolTipPopupOpen(true);\n  } //close modals\n\n\n  function closeAllPopups() {\n    // console.log(\"Popup was closed\");\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false); // NOTE Close Info Tool Tip\n\n    setIsInfoToolTipPopupOpen(false);\n    setSelectedCard({});\n  } //ESC Close\n\n\n  useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener(\"keydown\", closeByEscape);\n    return () => document.removeEventListener(\"keydown\", closeByEscape);\n  }, []); //Handle User Update\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.updateUserInfo({\n      name,\n      about\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } //Handle avatar update\n\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.setUserAvatar({\n      avatar\n    }).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    if (!isLiked) {\n      api.changeLikeCardStatus(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      api.deleteLike(card._id).then(newCard => {\n        setCards(state => state.map(c => c._id === card._id ? newCard : c));\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n  function handleCardDelete(card) {\n    // After the API request, update the cards state using the filter() method. Create a copy\n    // of the array and exclude the deleted card from it.\n    api.removeCard(card._id).then(() => {\n      const cardList = cards.filter(c => c._id !== card._id);\n      setCards(cardList);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleAddPlaceSubmit({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // REGISTRATION\n\n\n  const handleRegistration = (email, password) => {\n    auth.register(email, password) // We only want to redirect users after the registration form has been properly submitted\n    .then(res => {\n      if (email && password) {\n        setIsSuccessful(true);\n        setIsInfoToolTipPopupOpen(true);\n        history.push(\"/signin\"); // console.log(\"res good\");\n\n        return res;\n      } else {\n        setIsSuccessful(false);\n      }\n    }).catch(err => {\n      setIsInfoToolTipPopupOpen(true);\n      console.log(err); // console.log(\"res bad\");\n\n      return setMessage(\"400 - one of the fields was filled in incorrectly\");\n    });\n  }; // const handleRegistration = (email, password) => {\n  //   if (email && password) {\n  //     auth\n  //       .register(email, password)\n  //       // We only want to redirect users after the registration form has been properly submitted\n  //       .then((res) => {\n  //         setIsSuccessful(true);\n  //         setIsInfoToolTipPopupOpen(true);\n  //         history.push(\"/signin\");\n  //         console.log(\"res good\");\n  //         return res;\n  //       })\n  //       .catch((err) => {\n  //         setIsSuccessful(false);\n  //         setIsInfoToolTipPopupOpen(true);\n  //         console.log(err);\n  //       });\n  //   } else {\n  //     // console.log(\"res bad\");\n  //     return setMessage(\n  //       \"400 - one of the fields was filled in incorrectly\"\n  //     );\n  //   }\n  // };\n  //LOG IN\n\n\n  const handleLogin = (email, password) => {\n    auth.authorize(email, password).then(data => {\n      if (!data) {\n        return setMessage(\"one or more of the fields were not provided\");\n      }\n\n      if (data) {\n        // set\n        setEmail(email); // TODO  handle login\n\n        setLoggedIn(true); // redirect user to cards\n\n        history.push(\"/\");\n        return;\n      }\n    }).catch(err => {\n      console.log(err);\n      setMessage(err.message);\n    });\n  }; //LOGOUT\n\n\n  function handleLogOut() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  const tokenCheck = () => {\n    // if user has a token in storage, check if it is valid\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\"); // make the request\n\n      auth.getContent(jwt).then(res => {\n        // if response is successful, log in the user\n        if (res) {\n          setEmail(res.data.email);\n          setLoggedIn(true); // also push user to the Home Page\n\n          history.push(\"/\"); // NOTE  : set user data in header. use This method for more than one userData\n          // const userData = {\n          //   email: res.email,\n          // };\n          // setUserData(userData);\n        }\n\n        console.log(\"something went wrong- tokencheck\");\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page__container\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header // userData={userData}\n        , {\n          email: email,\n          loggedIn: loggedIn,\n          handleLogOut: handleLogOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            component: Main,\n            exact: true,\n            path: \"/\",\n            loggedIn: loggedIn,\n            onEditAvatarClick: handleEditAvatarClick,\n            onEditProfileClick: handleEditProfileClick,\n            onAddPlaceClick: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              handleRegistration: handleRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin,\n              tokenCheck: tokenCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), loggedIn && /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onAddPlace: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n          name: `delete`,\n          title: `Are you sure?`,\n          buttonText: `Yes`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups,\n          isOpen: isImagePopupOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoToolTip, {\n          isOpen: isInfoToolTipPopupOpen,\n          onClose: closeAllPopups,\n          onShowToolTip: handleInfoTooltip,\n          isvalidRegistration: isSuccessful\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/onTqX7BCv4tDuNR8IHl/OWUYto=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/wilhelminatetteh/Desktop/around-react-app/src/components/App.js"],"names":["React","useEffect","useState","Header","Footer","Main","PopupWithForm","ImagePopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","api","CurrentUserContext","Route","Switch","Redirect","useHistory","Login","Register","ProtectedRoute","InfoToolTip","auth","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","isInfoToolTipPopupOpen","setIsInfoToolTipPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","password","setPassword","email","setEmail","message","setMessage","history","isSuccessful","setIsSuccessful","tokenCheck","getInfo","then","res","catch","err","console","log","getCardList","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","name","link","handleInfoTooltip","closeAllPopups","closeByEscape","e","key","document","addEventListener","removeEventListener","handleUpdateUser","about","updateUserInfo","handleUpdateAvatar","avatar","setUserAvatar","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","deleteLike","handleCardDelete","removeCard","cardList","filter","handleAddPlaceSubmit","addCard","handleRegistration","register","push","handleLogin","authorize","data","handleLogOut","localStorage","removeItem","getItem","jwt","getContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SACEC,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,UAJF,QAKO,kBALP;AAMA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IACJtB,QAAQ,CAAC,KAAD,CADV;AAEA,QAAM,CAACuB,mBAAD,EAAsBC,sBAAtB,IACJxB,QAAQ,CAAC,KAAD,CADV;AAEA,QAAM,CAACyB,qBAAD,EAAwBC,wBAAxB,IACJ1B,QAAQ,CAAC,KAAD,CADV;AAEA,QAAM,CAAC2B,gBAAD,EAAmBC,mBAAnB,IAA0C5B,QAAQ,CAAC,KAAD,CAAxD,CARa,CASb;;AACA,QAAM,CAAC6B,sBAAD,EAAyBC,yBAAzB,IACJ9B,QAAQ,CAAC,KAAD,CADV;AAEA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiC,WAAD,EAAcC,cAAd,IAAgClC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACmC,KAAD,EAAQC,QAAR,IAAoBpC,QAAQ,CAAC,EAAD,CAAlC,CAda,CAeb;;AACA,QAAM,CAACqC,QAAD,EAAWC,WAAX,IAA0BxC,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhC,CAhBa,CAiBb;AACA;;AACA,QAAM,CAACuC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2C,OAAD,EAAUC,UAAV,IAAwB5C,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM6C,OAAO,GAAG/B,UAAU,EAA1B;AACA,QAAM,CAACgC,YAAD,EAAeC,eAAf,IAAkCjD,KAAK,CAACE,QAAN,CAAe,KAAf,CAAxC,CAxBa,CA0Bb;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiD,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAjD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,GAAG,CACAwC,OADH,GAEGC,IAFH,CAESC,GAAD,IAAS;AACbjB,MAAAA,cAAc,CAACiB,GAAD,CAAd;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;AAUAtD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,GAAG,CACA+C,WADH,GAEGN,IAFH,CAESC,GAAD,IAAS;AACbf,MAAAA,QAAQ,CAACe,GAAD,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT,CA1Ca,CAqDb;;AACA,WAASI,qBAAT,GAAiC;AAC/B;AACA/B,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;;AACD,WAASgC,sBAAT,GAAkC;AAChC;AACApC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD;;AACD,WAASqC,mBAAT,GAA+B;AAC7B;AACAnC,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAjEY,CAkEb;;;AACA,WAASoC,eAAT,CAAyB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAzB,EAAyC;AACvC9B,IAAAA,eAAe,CAAC;AAAE6B,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAf;AACAlC,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAtEY,CAuEb;;;AACA,WAASmC,iBAAT,GAA6B;AAC3BjC,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,GA1EY,CA2Eb;;;AACA,WAASkC,cAAT,GAA0B;AACxB;AACA1C,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,mBAAmB,CAAC,KAAD,CAAnB,CALwB,CAMxB;;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GArFY,CAsFb;;;AACAjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkE,aAAa,GAAIC,CAAD,IAAO;AAC3B,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBH,QAAAA,cAAc;AACf;AACF,KAJD;;AAKAI,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCJ,aAArC;AACA,WAAO,MACLG,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCL,aAAxC,CADF;AAED,GATQ,EASN,EATM,CAAT,CAvFa,CAkGb;;AACA,WAASM,gBAAT,CAA0B;AAAEV,IAAAA,IAAF;AAAQW,IAAAA;AAAR,GAA1B,EAA2C;AACzC/D,IAAAA,GAAG,CACAgE,cADH,CACkB;AAAEZ,MAAAA,IAAF;AAAQW,MAAAA;AAAR,KADlB,EAEGtB,IAFH,CAESC,GAAD,IAAS;AACbjB,MAAAA,cAAc,CAACiB,GAAD,CAAd;AACAa,MAAAA,cAAc;AACf,KALH,EAMGZ,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GA7GY,CA+Gb;;;AACA,WAASqB,kBAAT,CAA4B;AAAEC,IAAAA;AAAF,GAA5B,EAAwC;AACtClE,IAAAA,GAAG,CACAmE,aADH,CACiB;AAAED,MAAAA;AAAF,KADjB,EAEGzB,IAFH,CAESC,GAAD,IAAS;AACbjB,MAAAA,cAAc,CAACiB,GAAD,CAAd;AACAa,MAAAA,cAAc;AACf,KALH,EAMGZ,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD;;AACD,WAASwB,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B;AACA,UAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUlD,WAAW,CAACkD,GAA7C,CAAhB,CAF4B,CAI5B;;AACA,QAAI,CAACJ,OAAL,EAAc;AACZtE,MAAAA,GAAG,CACA2E,oBADH,CACwBN,IAAI,CAACK,GAD7B,EAEGjC,IAFH,CAESmC,OAAD,IAAa;AACjBjD,QAAAA,QAAQ,CAAEkD,KAAD,IACPA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAjD,CADM,CAAR;AAGD,OANH,EAOGpC,KAPH,CAOUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OATH;AAUD,KAXD,MAWO;AACL5C,MAAAA,GAAG,CACAgF,UADH,CACcX,IAAI,CAACK,GADnB,EAEGjC,IAFH,CAESmC,OAAD,IAAa;AACjBjD,QAAAA,QAAQ,CAAEkD,KAAD,IACPA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAQA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAf,GAAqBE,OAArB,GAA+BG,CAAjD,CADM,CAAR;AAGD,OANH,EAOGpC,KAPH,CAOUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OATH;AAUD;AACF;;AACD,WAASqC,gBAAT,CAA0BZ,IAA1B,EAAgC;AAC9B;AACA;AACArE,IAAAA,GAAG,CACAkF,UADH,CACcb,IAAI,CAACK,GADnB,EAEGjC,IAFH,CAEQ,MAAM;AACV,YAAM0C,QAAQ,GAAGzD,KAAK,CAAC0D,MAAN,CAAcL,CAAD,IAAOA,CAAC,CAACL,GAAF,KAAUL,IAAI,CAACK,GAAnC,CAAjB;AACA/C,MAAAA,QAAQ,CAACwD,QAAD,CAAR;AACD,KALH,EAMGxC,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD;;AACD,WAASyC,oBAAT,CAA8B;AAAEjC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAA9B,EAA8C;AAC5CrD,IAAAA,GAAG,CACAsF,OADH,CACW;AAAElC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KADX,EAEGZ,IAFH,CAESmC,OAAD,IAAa;AACjBjD,MAAAA,QAAQ,CAAC,CAACiD,OAAD,EAAU,GAAGlD,KAAb,CAAD,CAAR;AACA6B,MAAAA,cAAc;AACf,KALH,EAMGZ,KANH,CAMUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GA/KY,CAgLb;;;AACA,QAAM2C,kBAAkB,GAAG,CAACvD,KAAD,EAAQF,QAAR,KAAqB;AAC9CpB,IAAAA,IAAI,CACD8E,QADH,CACYxD,KADZ,EACmBF,QADnB,EAEE;AAFF,KAGGW,IAHH,CAGSC,GAAD,IAAS;AACb,UAAIV,KAAK,IAAIF,QAAb,EAAuB;AACrBQ,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAjB,QAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAe,QAAAA,OAAO,CAACqD,IAAR,CAAa,SAAb,EAHqB,CAIrB;;AACA,eAAO/C,GAAP;AACD,OAND,MAMO;AACLJ,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,KAbH,EAcGK,KAdH,CAcUC,GAAD,IAAS;AACdvB,MAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFc,CAGd;;AACA,aAAOT,UAAU,CACf,mDADe,CAAjB;AAGD,KArBH;AAsBD,GAvBD,CAjLa,CAyMb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMuD,WAAW,GAAG,CAAC1D,KAAD,EAAQF,QAAR,KAAqB;AACvCpB,IAAAA,IAAI,CACDiF,SADH,CACa3D,KADb,EACoBF,QADpB,EAEGW,IAFH,CAESmD,IAAD,IAAU;AACd,UAAI,CAACA,IAAL,EAAW;AACT,eAAOzD,UAAU,CACf,6CADe,CAAjB;AAGD;;AACD,UAAIyD,IAAJ,EAAU;AACR;AACA3D,QAAAA,QAAQ,CAACD,KAAD,CAAR,CAFQ,CAGR;;AACAH,QAAAA,WAAW,CAAC,IAAD,CAAX,CAJQ,CAKR;;AACAO,QAAAA,OAAO,CAACqD,IAAR,CAAa,GAAb;AACA;AACD;AACF,KAjBH,EAkBG9C,KAlBH,CAkBUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAT,MAAAA,UAAU,CAACS,GAAG,CAACV,OAAL,CAAV;AACD,KArBH;AAsBD,GAvBD,CAnOa,CA4Pb;;;AACA,WAAS2D,YAAT,GAAwB;AACtBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAlE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD;;AACD,QAAMQ,UAAU,GAAG,MAAM;AACvB;AACA,QAAIuD,YAAY,CAACE,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,YAAMC,GAAG,GAAGH,YAAY,CAACE,OAAb,CAAqB,KAArB,CAAZ,CAD+B,CAE/B;;AACAtF,MAAAA,IAAI,CACDwF,UADH,CACcD,GADd,EAEGxD,IAFH,CAESC,GAAD,IAAS;AACb;AACA,YAAIA,GAAJ,EAAS;AACPT,UAAAA,QAAQ,CAACS,GAAG,CAACkD,IAAJ,CAAS5D,KAAV,CAAR;AACAH,UAAAA,WAAW,CAAC,IAAD,CAAX,CAFO,CAGP;;AACAO,UAAAA,OAAO,CAACqD,IAAR,CAAa,GAAb,EAJO,CAKP;AACA;AACA;AACA;AACA;AACD;;AACD5C,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,OAhBH,EAiBGH,KAjBH,CAiBUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBlB;AAkBD;AACF,GAxBD;;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,QAAA,KAAK,EAAEpB,WAApC;AAAA,gCACE,QAAC,MAAD,CACE;AADF;AAEE,UAAA,KAAK,EAAEQ,KAFT;AAGE,UAAA,QAAQ,EAAEJ,QAHZ;AAIE,UAAA,YAAY,EAAEiE;AAJhB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,MAAD;AAAA,kCACE,QAAC,cAAD;AACE,YAAA,SAAS,EAAEnG,IADb;AAEE,YAAA,KAAK,MAFP;AAGE,YAAA,IAAI,EAAC,GAHP;AAIE,YAAA,QAAQ,EAAEkC,QAJZ;AAKE,YAAA,iBAAiB,EAAEoB,qBALrB;AAME,YAAA,kBAAkB,EAAEC,sBANtB;AAOE,YAAA,eAAe,EAAEC,mBAPnB;AAQE,YAAA,WAAW,EAAEC,eARf;AASE,YAAA,KAAK,EAAEzB,KATT;AAUE,YAAA,UAAU,EAAE0C,cAVd;AAWE,YAAA,YAAY,EAAEa,gBAXhB;AAYE,YAAA,KAAK,EAAEjD;AAZT;AAAA;AAAA;AAAA;AAAA,kBADF,eAeE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,kBAAkB,EAAEuD;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAfF,eAkBE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,SAAZ;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,WAAW,EAAEG,WADf;AAEE,cAAA,UAAU,EAAEnD;AAFd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAwBE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA,sBACGX,QAAQ,gBACP,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBADO,gBAGP,QAAC,QAAD;AAAU,cAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EAuCGA,QAAQ,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAvCf,eAyCE,QAAC,gBAAD;AACE,UAAA,MAAM,EAAEhB,sBADV;AAEE,UAAA,OAAO,EAAE2C,cAFX;AAGE,UAAA,YAAY,EAAEO;AAHhB;AAAA;AAAA;AAAA;AAAA,gBAzCF,eA+CE,QAAC,aAAD;AACE,UAAA,MAAM,EAAEhD,mBADV;AAEE,UAAA,OAAO,EAAEyC,cAFX;AAGE,UAAA,UAAU,EAAE8B;AAHd;AAAA;AAAA;AAAA;AAAA,gBA/CF,eAqDE,QAAC,eAAD;AACE,UAAA,MAAM,EAAErE,qBADV;AAEE,UAAA,OAAO,EAAEuC,cAFX;AAGE,UAAA,cAAc,EAAEU;AAHlB;AAAA;AAAA;AAAA;AAAA,gBArDF,eA2DE,QAAC,aAAD;AACE,UAAA,IAAI,EAAG,QADT;AAEE,UAAA,KAAK,EAAG,eAFV;AAGE,UAAA,UAAU,EAAG;AAHf;AAAA;AAAA;AAAA;AAAA,gBA3DF,eAiEE,QAAC,UAAD;AACE,UAAA,IAAI,EAAE3C,YADR;AAEE,UAAA,OAAO,EAAEiC,cAFX;AAGE,UAAA,MAAM,EAAErC;AAHV;AAAA;AAAA;AAAA;AAAA,gBAjEF,eAuEE,QAAC,WAAD;AACE,UAAA,MAAM,EAAEE,sBADV;AAEE,UAAA,OAAO,EAAEmC,cAFX;AAGE,UAAA,aAAa,EAAED,iBAHjB;AAIE,UAAA,mBAAmB,EAAEjB;AAJvB;AAAA;AAAA;AAAA;AAAA,gBAvEF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD;;GAjXQ1B,G;UAuBSN,U;;;KAvBTM,G;AAmXT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport InfoToolTip from \"./InfoTooltip\";\nimport * as auth from \"../utils/auth\";\n\nfunction App() {\n  // State variable and setters\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] =\n    useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] =\n    useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] =\n    useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n  // NOTE : info tooltip original state\n  const [isInfoToolTipPopupOpen, setIsInfoToolTipPopupOpen] =\n    useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  //loggedin state\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  // use userData to show user email on the nav\n  // const [userData, setUserData] = useState({});\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const history = useHistory();\n  const [isSuccessful, setIsSuccessful] = React.useState(false);\n\n  //HANDLE AUTHENTICATIONe\n\n  useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  useEffect(() => {\n    api\n      .getInfo()\n      .then((res) => {\n        setCurrentUser(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  useEffect(() => {\n    api\n      .getCardList()\n      .then((res) => {\n        setCards(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //handlers for opening modals\n  function handleEditAvatarClick() {\n    // console.log(\"The Avatar was clicked.\");\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    // console.log(\"The Profile was clicked.\");\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    // console.log(\"The Place button  was clicked.\");\n    setIsAddPlacePopupOpen(true);\n  }\n  //Image Popup\n  function handleCardClick({ name, link }) {\n    setSelectedCard({ name, link });\n    setIsImagePopupOpen(true);\n  }\n  // NOTE :Handle info tooltip\n  function handleInfoTooltip() {\n    setIsInfoToolTipPopupOpen(true);\n  }\n  //close modals\n  function closeAllPopups() {\n    // console.log(\"Popup was closed\");\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsImagePopupOpen(false);\n    // NOTE Close Info Tool Tip\n    setIsInfoToolTipPopupOpen(false);\n    setSelectedCard({});\n  }\n  //ESC Close\n  useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === \"Escape\") {\n        closeAllPopups();\n      }\n    };\n    document.addEventListener(\"keydown\", closeByEscape);\n    return () =>\n      document.removeEventListener(\"keydown\", closeByEscape);\n  }, []);\n\n  //Handle User Update\n  function handleUpdateUser({ name, about }) {\n    api\n      .updateUserInfo({ name, about })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //Handle avatar update\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .setUserAvatar({ avatar })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function handleCardLike(card) {\n    // Check one more time if this card was already liked\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    // Send a request to the API and getting the updated card data\n    if (!isLiked) {\n      api\n        .changeLikeCardStatus(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      api\n        .deleteLike(card._id)\n        .then((newCard) => {\n          setCards((state) =>\n            state.map((c) => (c._id === card._id ? newCard : c))\n          );\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n  function handleCardDelete(card) {\n    // After the API request, update the cards state using the filter() method. Create a copy\n    // of the array and exclude the deleted card from it.\n    api\n      .removeCard(card._id)\n      .then(() => {\n        const cardList = cards.filter((c) => c._id !== card._id);\n        setCards(cardList);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function handleAddPlaceSubmit({ name, link }) {\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  // REGISTRATION\n  const handleRegistration = (email, password) => {\n    auth\n      .register(email, password)\n      // We only want to redirect users after the registration form has been properly submitted\n      .then((res) => {\n        if (email && password) {\n          setIsSuccessful(true);\n          setIsInfoToolTipPopupOpen(true);\n          history.push(\"/signin\");\n          // console.log(\"res good\");\n          return res;\n        } else {\n          setIsSuccessful(false);\n        }\n      })\n      .catch((err) => {\n        setIsInfoToolTipPopupOpen(true);\n        console.log(err);\n        // console.log(\"res bad\");\n        return setMessage(\n          \"400 - one of the fields was filled in incorrectly\"\n        );\n      });\n  };\n  // const handleRegistration = (email, password) => {\n  //   if (email && password) {\n  //     auth\n  //       .register(email, password)\n  //       // We only want to redirect users after the registration form has been properly submitted\n  //       .then((res) => {\n  //         setIsSuccessful(true);\n  //         setIsInfoToolTipPopupOpen(true);\n  //         history.push(\"/signin\");\n  //         console.log(\"res good\");\n  //         return res;\n  //       })\n  //       .catch((err) => {\n  //         setIsSuccessful(false);\n  //         setIsInfoToolTipPopupOpen(true);\n  //         console.log(err);\n  //       });\n  //   } else {\n  //     // console.log(\"res bad\");\n  //     return setMessage(\n  //       \"400 - one of the fields was filled in incorrectly\"\n  //     );\n  //   }\n  // };\n\n  //LOG IN\n  const handleLogin = (email, password) => {\n    auth\n      .authorize(email, password)\n      .then((data) => {\n        if (!data) {\n          return setMessage(\n            \"one or more of the fields were not provided\"\n          );\n        }\n        if (data) {\n          // set\n          setEmail(email);\n          // TODO  handle login\n          setLoggedIn(true);\n          // redirect user to cards\n          history.push(\"/\");\n          return;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setMessage(err.message);\n      });\n  };\n\n  //LOGOUT\n  function handleLogOut() {\n    localStorage.removeItem(\"jwt\");\n    setLoggedIn(false);\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n  const tokenCheck = () => {\n    // if user has a token in storage, check if it is valid\n    if (localStorage.getItem(\"jwt\")) {\n      const jwt = localStorage.getItem(\"jwt\");\n      // make the request\n      auth\n        .getContent(jwt)\n        .then((res) => {\n          // if response is successful, log in the user\n          if (res) {\n            setEmail(res.data.email);\n            setLoggedIn(true);\n            // also push user to the Home Page\n            history.push(\"/\");\n            // NOTE  : set user data in header. use This method for more than one userData\n            // const userData = {\n            //   email: res.email,\n            // };\n            // setUserData(userData);\n          }\n          console.log(\"something went wrong- tokencheck\");\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__container\">\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header\n            // userData={userData}\n            email={email}\n            loggedIn={loggedIn}\n            handleLogOut={handleLogOut}\n          />\n          <Switch>\n            <ProtectedRoute\n              component={Main}\n              exact\n              path=\"/\"\n              loggedIn={loggedIn}\n              onEditAvatarClick={handleEditAvatarClick}\n              onEditProfileClick={handleEditProfileClick}\n              onAddPlaceClick={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              email={email}\n            />\n            <Route path=\"/signup\">\n              <Register handleRegistration={handleRegistration} />\n            </Route>\n            <Route path=\"/signin\">\n              <Login\n                handleLogin={handleLogin}\n                tokenCheck={tokenCheck}\n              />\n            </Route>\n            <Route exact path=\"/\">\n              {loggedIn ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <Redirect to=\"/signin\" />\n              )}\n            </Route>\n          </Switch>\n          {loggedIn && <Footer />}\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <PopupWithForm\n            name={`delete`}\n            title={`Are you sure?`}\n            buttonText={`Yes`}\n          ></PopupWithForm>\n\n          <ImagePopup\n            card={selectedCard}\n            onClose={closeAllPopups}\n            isOpen={isImagePopupOpen}\n          />\n\n          <InfoToolTip\n            isOpen={isInfoToolTipPopupOpen}\n            onClose={closeAllPopups}\n            onShowToolTip={handleInfoTooltip}\n            isvalidRegistration={isSuccessful}\n          />\n        </CurrentUserContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}